[{"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/index.js":"1","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/App.js":"2","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reportWebVitals.js":"3","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Header.js":"4","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Footer.js":"5","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/HomeScreen.js":"6","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/products.js":"7","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Product.js":"8","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Rating.js":"9","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProductScreen.js":"10","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/store.js":"11","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/productReducers.js":"12","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/productConstants.js":"13","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/productActions.js":"14","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Loader.js":"15","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Message.js":"16","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/CartScreen.js":"17","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/cartReducers.js":"18","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/cartConstants.js":"19","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/cartActions.js":"20","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/userReducers.js":"21","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/userConstants.js":"22","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/LoginScreen.js":"23","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/userActions.js":"24","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/FormContainer.js":"25","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/RegisterScreen.js":"26","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProfileScreen.js":"27","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ShippingScreen.js":"28","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/CheckoutSteps.js":"29","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/PaymentScreen.js":"30","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/PlaceOrderScreen.js":"31","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/orderReducers.js":"32","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/orderConstants.js":"33","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/orderActions.js":"34","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/OrderScreen.js":"35","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/UserListScreen.js":"36","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/UserEditScreen.js":"37","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProductListScreen.js":"38","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProductEditScreen.js":"39"},{"size":632,"mtime":1702921250541,"results":"40","hashOfConfig":"41"},{"size":2308,"mtime":1703698020872,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1702921250551,"results":"43","hashOfConfig":"41"},{"size":3294,"mtime":1702921250541,"results":"44","hashOfConfig":"41"},{"size":381,"mtime":1702921250541,"results":"45","hashOfConfig":"41"},{"size":1128,"mtime":1702921250551,"results":"46","hashOfConfig":"41"},{"size":2607,"mtime":1692653390074,"results":"47","hashOfConfig":"41"},{"size":1081,"mtime":1702921250541,"results":"48","hashOfConfig":"41"},{"size":1937,"mtime":1702921250541,"results":"49","hashOfConfig":"41"},{"size":9249,"mtime":1702921250551,"results":"50","hashOfConfig":"41"},{"size":2185,"mtime":1703698020872,"results":"51","hashOfConfig":"41"},{"size":3008,"mtime":1703698020872,"results":"52","hashOfConfig":"41"},{"size":1032,"mtime":1703698020872,"results":"53","hashOfConfig":"41"},{"size":4239,"mtime":1703698020872,"results":"54","hashOfConfig":"41"},{"size":459,"mtime":1702921250541,"results":"55","hashOfConfig":"41"},{"size":228,"mtime":1702921250541,"results":"56","hashOfConfig":"41"},{"size":4905,"mtime":1702921250551,"results":"57","hashOfConfig":"41"},{"size":1475,"mtime":1702921250541,"results":"58","hashOfConfig":"41"},{"size":288,"mtime":1702921250541,"results":"59","hashOfConfig":"41"},{"size":1333,"mtime":1702921250541,"results":"60","hashOfConfig":"41"},{"size":4059,"mtime":1702921250551,"results":"61","hashOfConfig":"41"},{"size":1484,"mtime":1702921250541,"results":"62","hashOfConfig":"41"},{"size":2797,"mtime":1702921250551,"results":"63","hashOfConfig":"41"},{"size":7581,"mtime":1702921250541,"results":"64","hashOfConfig":"41"},{"size":378,"mtime":1702921250541,"results":"65","hashOfConfig":"41"},{"size":4143,"mtime":1702921250551,"results":"66","hashOfConfig":"41"},{"size":6596,"mtime":1702921250551,"results":"67","hashOfConfig":"41"},{"size":3371,"mtime":1702921250551,"results":"68","hashOfConfig":"41"},{"size":1612,"mtime":1702921250541,"results":"69","hashOfConfig":"41"},{"size":1996,"mtime":1702921250551,"results":"70","hashOfConfig":"41"},{"size":6700,"mtime":1702921250551,"results":"71","hashOfConfig":"41"},{"size":2806,"mtime":1702921250541,"results":"72","hashOfConfig":"41"},{"size":843,"mtime":1702921250541,"results":"73","hashOfConfig":"41"},{"size":4241,"mtime":1702921250541,"results":"74","hashOfConfig":"41"},{"size":8217,"mtime":1702921250551,"results":"75","hashOfConfig":"41"},{"size":3919,"mtime":1702921250551,"results":"76","hashOfConfig":"41"},{"size":4258,"mtime":1702921250551,"results":"77","hashOfConfig":"41"},{"size":4852,"mtime":1702921250551,"results":"78","hashOfConfig":"41"},{"size":8149,"mtime":1703697739012,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"14acnzj",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"83"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"83"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"83"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"83"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"83"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"83"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"83"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/index.js",[],[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/App.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reportWebVitals.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Header.js",["212"],[],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin \n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant='dark' collapseOnSelect>\n                <Container>\n                    {/* Reactify, the upper left icon refers to homepage '/' now with no refresh*/}\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Dave's eStore</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse  id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n\n                        <LinkContainer to=\"/cart\">\n                            <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\n                        </LinkContainer>   \n\n                        {/* Conditional for showing either login or logout*/}\n                        {/* If logged in, show email/username, and profile dropdown */}\n                        {userInfo ? (\n                            <NavDropdown title={userInfo.name} id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                                </LinkContainer>\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                            </NavDropdown>\n                        ) : ( \n                            // If logged out, show 'Login'\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link><i className='fas fa-user'></i> Login</Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {/* is user info and user is admin? then display admin menu drop down */}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n                        </Nav>\n\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Footer.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/HomeScreen.js",["213"],[],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector }from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProducts } from '../actions/productActions'\n\n\n\nfunction HomeScreen() {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products } = productList\n\n    useEffect(() => {\n        dispatch(listProducts())\n\n    }, [dispatch])\n\n    return (\n        <div>\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                   : \n                    <Row>\n                    {products.map(product => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n        }\n\n\n        </div>\n    )\n}\n\nexport default HomeScreen","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/products.js",[],[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Product.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Rating.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProductScreen.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/store.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/productReducers.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/productConstants.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/productActions.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Loader.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/Message.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/CartScreen.js",["214","215"],[],"import React, { useEffect } from \"react\";\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\n\nfunction CartScreen() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { id } = useParams();\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n\n    useEffect(() => {\n        if(id) {\n            dispatch(addToCart(id, qty))\n        }\n    }, [dispatch, id, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const userLogin = useSelector(state => state.userLogin)  \n    const { error, loading, userInfo } = userLogin\n\n\n    const checkoutHandler = () => {\n        if (userInfo){\n          navigate('/shipping')\n        } else {\n          navigate('/login')\n        }\n      }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            value={item.qty}\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                        >\n                                            {\n                                                [...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x + 1} value={x + 1}>\n                                                        {x + 1}\n                                                    </option>\n                                                )) \n                                            }\n\n                                        </Form.Control>                                    \n                                    </Col>\n                                    <Col md={1}>\n                                        <Button\n                                            type='button'\n                                            variant='light'\n                                            onClick={() => removeFromCartHandler(item.product)}\n                                        >\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup.Item>\n                        <div className=\"text-center\">\n                        <Button\n                            type='button'\n                            className=\"btn-blk\"\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                        </div>\n                    </ListGroup.Item>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/cartReducers.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/cartConstants.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/cartActions.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/userReducers.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/userConstants.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/LoginScreen.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/userActions.js",["216"],[],"import axios from 'axios'\nimport {  \n    \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\nexport const login = (email, password) => async (dispatch) => { \n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type':'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password }, \n            config\n            )\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n//Remove item from local storage and dispatch our user logout case in userReducers.js\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => { \n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type':'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password }, \n            config\n            )\n\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/${id}/`,\n            config\n            )\n\n        dispatch({\n            type:USER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n    }catch(error){\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n// takes in a username email password and sends obj back to update the profile\nexport const updateUserProfile = (user) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n            )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/`,\n            config\n            )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n\n        })\n\n    }catch(error){\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n            )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n\n        })\n\n    }catch(error){\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n// get our user data\n        const {\n            userLogin: { userInfo },\n        } = getState()\n// determine if admin with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n            )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch(error){\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/FormContainer.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/RegisterScreen.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProfileScreen.js",["217","218"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader  from '../components/Loader'\nimport Message  from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen() {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const location = useLocation()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n \n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n    \n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error:errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if(!userInfo) {\n            navigate('/login')\n        } else {\n            if(!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type:USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, navigate, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id':user._id,\n                'name': name,\n                'email': email,\n                'password': password,\n            }))\n            setMessage('')\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader/>}\n            {/* Name field*/}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n            {/* Email field*/}\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                {/* Password field*/}\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder=\"Enter Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"passwordConfirm\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder=\"Confirm Password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <div className='my-3'>\n                    <Button type=\"submit\" variant=\"primary\">\n                        Update\n                    </Button>\n                </div>\n\n            </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader/>\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table striped responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                                <th>ID</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}> \n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                        <i className=\"fas fa-times\" style={{color: 'red'}}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className=\"btn-sm\">Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n\n        </Row>\n    )\n}\n\nexport default ProfileScreen","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ShippingScreen.js",["219","220"],[],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer  from '../components/FormContainer';\nimport CheckoutSteps  from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\n\nfunction ShippingScreen(/*history/navigate*/) {\n\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        navigate('/payment')\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2/>\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder=\"Enter Address\"\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder=\"Enter City\"\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"postalCode\">\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder=\"Enter Postal Code\"\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder=\"Enter Country\"\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <div className='my-3'>\n                    <Button type=\"submit\" variant=\"primary\">\n                        Continue\n                    </Button>\n                </div>\n            </Form>\n        </FormContainer>\n    )\n}\n\n    export default ShippingScreen;","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/components/CheckoutSteps.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/PaymentScreen.js",["221","222","223"],[],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Col, FormGroup, FormLabel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer  from '../components/FormContainer';\nimport CheckoutSteps  from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\nfunction PaymentScreen() {    \n\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate(); \n\n    const[paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if(!shippingAddress.address) {\n        navigate('/shipping')\n    }\n\n    const submitHandler= (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n\n    return (\n            <FormContainer>\n                <CheckoutSteps step1 step2 step3 />\n\n                <Form onSubmit={submitHandler}>\n                    <FormGroup>\n                        <Form.Label as='legend'>Select Method</Form.Label>\n                        <Col>\n                            <Form.Check \n                                type='radio'\n                                label='Paypal or Credit Card'\n                                id='paypal'\n                                name='paymentMethod'\n                                checked\n                                onChange={(e) => setPaymentMethod(e.target.value)}\n                            >\n\n                            </Form.Check>\n                        </Col>\n                    </FormGroup>\n\n                    <div className='my-3'>\n                        <Button type=\"submit\" variant=\"primary\">\n                            Continue\n                        </Button>\n                    </div>\n\n                </Form>\n            </FormContainer>\n        )\n    }\n\nexport default PaymentScreen;","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/PlaceOrderScreen.js",["224"],[],"import React, { useEffect } from \"react\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card  } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message  from '../components/Message'; \nimport CheckoutSteps  from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n\nfunction PlaceOrderScreen() {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const navigate = useNavigate(); \n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 50 ? 0 : 10).toFixed(2)\n    cart.taxPrice = ((0.055) * cart.itemsPrice).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    if(!cart.paymentMethod) {\n        navigate('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            navigate(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, navigate, dispatch ])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n            \n        }))\n        \n    }\n \n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row> \n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                                {'   '}\n                                {cart.shippingAddress.postalCode},\n                                {'   '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                <ListGroup variant=\"flush\">\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n\n                                </ListGroup>\n                            )}\n\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items: </Col>\n                                    <Col>${cart.itemsPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping: </Col>\n                                    <Col>${cart.shippingPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax: </Col>\n                                    <Col>${cart.taxPrice} </Col>\n                                </Row>  \n                            </ListGroup.Item>\n                            \n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total: </Col>\n                                    <Col>${cart.totalPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <div className='my-3'>\n                                    <Button \n                                    type=\"button\" \n                                    className=\"btn-block\"\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                    >\n                                        Place Order\n                                    </Button>\n                                </div>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\n\nexport default PlaceOrderScreen","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/reducers/orderReducers.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/constants/orderConstants.js",[],[],"/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/actions/orderActions.js",["225","226"],[],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n            )\n            \n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n            \n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        // User info to send the token\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        // Sending the token, must auth to pay \n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n            \n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listMyOrders = (id) => async (dispatch, getState) => { \n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n            \n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/OrderScreen.js",["227","228","229"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation, useParams, Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card  } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message  from '../components/Message'; \nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\nfunction OrderScreen() {\n    const { id } = useParams();\n    const location = useLocation()\n    const navigate = useNavigate(); \n    const dispatch = useDispatch();\n    // \n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    if(!loading&& !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n    // PAYPAL CLIENT ID: AQPlNkLdQeRLYBfSdRnVi3f_34X_NIkYPECOMT-ufFO-rJnixADSb1aazR1STrvfF-tnFgRvZs3HMpXy\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AQPlNkLdQeRLYBfSdRnVi3f_34X_NIkYPECOMT-ufFO-rJnixADSb1aazR1STrvfF-tnFgRvZs3HMpXy'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    // dispatch the order if its there and pay has been successful and there is an order number\n    useEffect(() => {\n        if(!order || successPay || order._id !== Number(id)) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch(getOrderDetails(id))\n        }else if(!order.isPaid) {\n            if(!window.paypal){\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [order, id, dispatch, successPay])\n    // PaymentResult is the payment data from paypal\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(id, paymentResult))\n    }\n\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h1>Order: {order._id}</h1>\n            <Row> \n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong>{order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`} alt='email'>{order.user.email}</a></p>\n                            <p>\n                                <strong>Shipping: </strong>\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\n                                {'   '}\n                                {order.shippingAddress.postalCode},\n                                {'   '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant='success'>Delivered on {order.deliveredAt.substring(0, 10)}</Message>\n                            ) : (\n                                    <Message variant='warning'>Not yet Delivered</Message>                        \n                                )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message>\n                            ) : (\n                                    <Message variant='warning'>Not yet paid</Message>                        \n                                )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message variant='info'>\n                                Order is empty\n                            </Message> : (\n                                <ListGroup variant=\"flush\">\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n\n                                </ListGroup>\n                            )}\n\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items: </Col>\n                                    <Col>${order.itemsPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping: </Col>\n                                    <Col>${order.shippingPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax: </Col>\n                                    <Col>${order.taxPrice} </Col>\n                                </Row>  \n                            </ListGroup.Item>\n                            \n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total: </Col>\n                                    <Col>${order.totalPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            \n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader/>}\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton \n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\n\nexport default OrderScreen","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/UserListScreen.js",["230","231","232","233","234","235"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader  from '../components/Loader'\nimport Message  from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen() {\n\n    const dispatch = useDispatch()\n    let navigate = useNavigate(); //history is deprecated\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success:successDelete } = userDelete\n\n    useEffect(() => {\n        // if admin then access users list\n        if(userInfo && userInfo.isAdmin){\n            dispatch(listUsers())\n        } else {\n        // sends you to login page, or home page if already logged\n            navigate('/login')\n        }\n    }, [dispatch, navigate, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure you want to delete this user?'))\n\n        dispatch(deleteUser(id))\n    }\n\n    return (\n        <div>\n            <h1>\n                Users\n            </h1>\n            {loading \n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table.sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            \n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : ( \n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n                                        \n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant=\"light\" className=\"btn-sm\">\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                        \n                                    </tr>\n                                ))}\n                            </tbody>\n\n                        </Table>\n                    )}\n        </div>\n    )   \n}\n\nexport default UserListScreen\n\n","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/UserEditScreen.js",["236","237"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader  from '../components/Loader'\nimport Message  from '../components/Message'\nimport FormContainer  from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen() {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const location = useLocation()\n    const navigate = useNavigate()\n    const { id } = useParams();\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = userUpdate\n\n    useEffect(() => {\n        \n        if(successUpdate) {\n            dispatch({type: USER_UPDATE_RESET})\n            navigate('/admin/userlist')\n        } else { \n             if(!user.name || user._id !== Number(id)) {\n                dispatch(getUserDetails(id))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [user, id, successUpdate, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({_id: user._id, name, email, isAdmin}))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                { loadingUpdate && <Loader/> }\n                { errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\n\n                { loading ? <Loader /> \n                    : error \n                        ? <Message variant='danger'>{error}</Message>\n                        : (\n                            <Form onSubmit={submitHandler}>\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type='name'\n                                    placeholder=\"Enter Name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                        {/* Email field*/}\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder=\"Enter Email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            {/* Password field*/}\n                            <Form.Group controlId=\"isadmin\">\n                                <Form.Check\n                                    type='checkbox'\n                                    label=\"Is Admin\"\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <div className='my-3'>\n                                <Button type=\"submit\" variant=\"primary\">\n                                    Update\n                                </Button>\n                            </div>\n                            </Form> \n                        )\n                }\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProductListScreen.js",["238","239","240","241","242","243"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader  from '../components/Loader'\nimport Message  from '../components/Message'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen() {\n\n    const dispatch = useDispatch()\n    const { id } = useParams(); //match is deprecated\n    let navigate = useNavigate(); //history is deprecated\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success:successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success:successCreate, product: createdProduct } = productCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n        // if admin then access users list\n        if(!userInfo.isAdmin){  \n            navigate('/login')\n        } \n        if(successCreate){ \n            navigate(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts())\n        }\n\n    }, [dispatch, userInfo, successDelete, successCreate])\n\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure you want to delete this Product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className=\"align-items-center\">\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className=\"text-right\">\n                        <Button className='my-3' onClick={createProductHandler}>  \n                            <i className=\"fas fa-plus\"></i>  Create Product\n                        </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading \n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table.sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>PRICE</th>\n                                    <th>CATEGORY</th>\n                                    <th>BRAND</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            \n                            <tbody>\n                                {products.map(product => (\n                                    <tr key={product._id}>\n                                        <td>{product._id}</td>\n                                        <td>{product.name}</td>\n                                        <td>${product.price}</td>\n                                        <td>{product.category}</td>\n                                        <td>{product.brand}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                <Button variant=\"light\" className=\"btn-sm\">\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n\n                        </Table>\n                    )}\n        </div>\n    )   \n}\n\nexport default ProductListScreen\n\n","/home/dave4283/uniform/personal_project/ecom_personal_project/frontend/src/screens/ProductEditScreen.js",["244"],[],{"ruleId":"245","severity":1,"message":"246","line":3,"column":34,"nodeType":"247","messageId":"248","endLine":3,"endColumn":37},{"ruleId":"245","severity":1,"message":"249","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"250","line":32,"column":13,"nodeType":"247","messageId":"248","endLine":32,"endColumn":18},{"ruleId":"245","severity":1,"message":"251","line":32,"column":20,"nodeType":"247","messageId":"248","endLine":32,"endColumn":27},{"ruleId":"245","severity":1,"message":"252","line":22,"column":5,"nodeType":"247","messageId":"248","endLine":22,"endColumn":30},{"ruleId":"245","severity":1,"message":"253","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"254","line":20,"column":11,"nodeType":"247","messageId":"248","endLine":20,"endColumn":19},{"ruleId":"245","severity":1,"message":"255","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"256","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":21},{"ruleId":"245","severity":1,"message":"255","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"256","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":21},{"ruleId":"245","severity":1,"message":"257","line":3,"column":40,"nodeType":"247","messageId":"248","endLine":3,"endColumn":49},{"ruleId":"258","severity":1,"message":"259","line":34,"column":8,"nodeType":"260","endLine":34,"endColumn":38,"suggestions":"261"},{"ruleId":"245","severity":1,"message":"262","line":14,"column":5,"nodeType":"247","messageId":"248","endLine":14,"endColumn":20},{"ruleId":"245","severity":1,"message":"263","line":19,"column":5,"nodeType":"247","messageId":"248","endLine":19,"endColumn":24},{"ruleId":"245","severity":1,"message":"264","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":16},{"ruleId":"245","severity":1,"message":"254","line":12,"column":11,"nodeType":"247","messageId":"248","endLine":12,"endColumn":19},{"ruleId":"245","severity":1,"message":"265","line":13,"column":11,"nodeType":"247","messageId":"248","endLine":13,"endColumn":19},{"ruleId":"245","severity":1,"message":"249","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"253","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"256","line":2,"column":16,"nodeType":"247","messageId":"248","endLine":2,"endColumn":27},{"ruleId":"245","severity":1,"message":"266","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"245","severity":1,"message":"246","line":4,"column":24,"nodeType":"247","messageId":"248","endLine":4,"endColumn":27},{"ruleId":"245","severity":1,"message":"267","line":4,"column":29,"nodeType":"247","messageId":"248","endLine":4,"endColumn":32},{"ruleId":"245","severity":1,"message":"254","line":17,"column":11,"nodeType":"247","messageId":"248","endLine":17,"endColumn":19},{"ruleId":"258","severity":1,"message":"268","line":42,"column":8,"nodeType":"260","endLine":42,"endColumn":43,"suggestions":"269"},{"ruleId":"245","severity":1,"message":"249","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"253","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"256","line":2,"column":16,"nodeType":"247","messageId":"248","endLine":2,"endColumn":27},{"ruleId":"245","severity":1,"message":"266","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"245","severity":1,"message":"270","line":14,"column":13,"nodeType":"247","messageId":"248","endLine":14,"endColumn":15},{"ruleId":"258","severity":1,"message":"271","line":41,"column":8,"nodeType":"260","endLine":41,"endColumn":58,"suggestions":"272"},{"ruleId":"245","severity":1,"message":"254","line":23,"column":11,"nodeType":"247","messageId":"248","endLine":23,"endColumn":19},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'location' is assigned a value but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'FormLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["273"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'Button' is defined but never used.","'navigate' is assigned a value but never used.","'Form' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["274"],"'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createdProduct._id' and 'navigate'. Either include them or remove the dependency array.",["275"],{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [success, navigate, dispatch, order._id]",{"range":"282","text":"283"},"Update the dependencies array to be: [user, id, successUpdate, navigate, dispatch]",{"range":"284","text":"285"},"Update the dependencies array to be: [dispatch, userInfo, successDelete, successCreate, navigate, createdProduct._id]",{"range":"286","text":"287"},[1290,1320],"[success, navigate, dispatch, order._id]",[1511,1546],"[user, id, successUpdate, navigate, dispatch]",[1653,1703],"[dispatch, userInfo, successDelete, successCreate, navigate, createdProduct._id]"]